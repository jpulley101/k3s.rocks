"use strict";(self.webpackChunkk_3_s=self.webpackChunkk_3_s||[]).push([[422],{3344:(e,r,a)=>{a.r(r),a.d(r,{assets:()=>d,contentTitle:()=>n,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var t=a(5893),s=a(1151);const i={sidebar_position:6,sidebar_label:"Traefik"},n=void 0,o={id:"traefik-dashboard",title:"traefik-dashboard",description:"Traefik dashboard",source:"@site/docs/traefik-dashboard.md",sourceDirName:".",slug:"/traefik-dashboard",permalink:"/traefik-dashboard",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6,sidebar_label:"Traefik"},sidebar:"tutorialSidebar",previous:{title:"HTTPS with Cert-Manager and Letsencrypt",permalink:"/https-cert-manager-letsencrypt"},next:{title:"Basic Auth",permalink:"/Basic-auth"}},d={},l=[{value:"Traefik dashboard",id:"traefik-dashboard",level:2},{value:"Expose traefik dashboard",id:"expose-traefik-dashboard",level:2},{value:"Old method, using cert-manager",id:"old-method-using-cert-manager",level:2},{value:"Create https certificate for ingressroute",id:"create-https-certificate-for-ingressroute",level:4}];function c(e){const r={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h4:"h4",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.a)(),...e.components},{Details:i}=r;return i||function(e,r){throw new Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.h2,{id:"traefik-dashboard",children:"Traefik dashboard"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.img,{alt:"Traefik Dashboard",src:a(2257).Z+"",width:"1249",height:"1309"})}),"\n",(0,t.jsx)(r.h2,{id:"expose-traefik-dashboard",children:"Expose traefik dashboard"}),"\n",(0,t.jsx)(r.p,{children:"You can use both Kubernetes standard Ingress or the Traefik CRD ingressroute for normal routes. To expose the dashboard you can use a traefik specific ingressroute CRD, or you can set up a service for it."}),"\n",(0,t.jsx)(r.p,{children:"Create service"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"cat traefik-dashboard-service.yaml | envsubst | kubectl apply -f -\n"})}),"\n",(0,t.jsxs)(i,{children:[(0,t.jsx)("summary",{children:"traefik-dashboard-service.yaml"}),(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{children:'--8<-- "./manifests/traefik-dashboard-service.yaml"\n'})})]}),"\n",(0,t.jsx)(r.p,{children:"Create ingress"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{children:"cat traefik-dashboard-ingress.yaml | envsubst | kubectl apply -f -\n"})}),"\n",(0,t.jsxs)(i,{children:[(0,t.jsx)("summary",{children:"traefik-dashboard-ingress.yaml"}),(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{children:'--8<-- "./manifests/traefik-dashboard-ingress.yaml"\n'})})]}),"\n",(0,t.jsxs)(r.p,{children:["Now it should be available at ",(0,t.jsx)(r.a,{href:"http://traefik.dog.example.com/dashboard/",children:"http://traefik.dog.example.com/dashboard/"})," (note the trailing slash!)."]}),"\n",(0,t.jsx)(r.h2,{id:"old-method-using-cert-manager",children:"Old method, using cert-manager"}),"\n",(0,t.jsx)(r.h4,{id:"create-https-certificate-for-ingressroute",children:"Create https certificate for ingressroute"}),"\n",(0,t.jsx)(r.p,{children:'Traefik does not support using cert-manager for tls. So when using ingressroute with https you need to first create a "fake" ingress to get a secret with the desired name. Then you use that secret like below.'}),"\n",(0,t.jsxs)(r.blockquote,{children:["\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"Wildcard:"})," Alternatively you could get a wildcard certificate, and just use that. The setup for that is slightly more complicated and might require using a third party nameserver like digitalocean or cloudflare to help with the challenges."]}),"\n"]}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"Create the temporary ingress so cert-manager gets the intial certificate"}),"\n"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"cat traefik-dashboard-tmp-ingress.yaml | envsubst | kubectl apply -f -\n"})}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:["Wait until you are able to access ",(0,t.jsx)("a",{href:"https://traefik.dog.example.com",target:"_blank",children:(0,t.jsx)(r.a,{href:"https://traefik.dog.example.com",children:"https://traefik.dog.example.com"})})," without errors or warnings about certificate."]}),"\n",(0,t.jsx)(r.li,{children:"Then delete it"}),"\n"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"cat traefik-dashboard-tmp-ingress.yaml | envsubst | kubectl delete -f -\n"})}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"Finally create the traefik native ingressroute"}),"\n"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"cat traefik-ingressroute-no-auth.yaml | envsubst | kubectl apply -f -\n"})}),"\n",(0,t.jsx)(r.h1,{id:"done",children:"Done"}),"\n",(0,t.jsxs)(r.p,{children:["Now you should have the traefik dashboard available on ",(0,t.jsx)("a",{href:"https://traefik.dog.example.com",target:"_blank",children:(0,t.jsx)(r.a,{href:"https://traefik.dog.yourdomain.com",children:"https://traefik.dog.yourdomain.com"})})]})]})}function h(e={}){const{wrapper:r}={...(0,s.a)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},2257:(e,r,a)=>{a.d(r,{Z:()=>t});const t=a.p+"assets/images/traefik-dashboard-aa83578967a3b95599c95b3b77013c1e.webp"},1151:(e,r,a)=>{a.d(r,{Z:()=>o,a:()=>n});var t=a(7294);const s={},i=t.createContext(s);function n(e){const r=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:n(e.components),t.createElement(i.Provider,{value:r},e.children)}}}]);