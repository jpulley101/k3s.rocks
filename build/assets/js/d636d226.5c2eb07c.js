"use strict";(self.webpackChunkk_3_s=self.webpackChunkk_3_s||[]).push([[782],{7441:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var l=s(5893),t=s(1151);const a={sidebar_position:2,sidebar_label:"Install Setup"},r=void 0,i={id:"install-setup",title:"install-setup",description:"Install and set up",source:"@site/docs/install-setup.md",sourceDirName:".",slug:"/install-setup",permalink:"/install-setup",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,sidebar_label:"Install Setup"},sidebar:"tutorialSidebar",previous:{title:"Intro",permalink:"/"},next:{title:"External Load Balancer",permalink:"/External-load-balancer"}},o={},c=[{value:"Install and set up",id:"install-and-set-up",level:2},{value:"Install a new Linux server with Docker",id:"install-a-new-linux-server-with-docker",level:2},{value:"Get manifests / repo",id:"get-manifests--repo",level:2},{value:"apply vs cat vs curl",id:"apply-vs-cat-vs-curl",level:3},{value:"apply",id:"apply",level:4},{value:"cat / envsubst",id:"cat--envsubst",level:4},{value:"curl",id:"curl",level:4},{value:"First master",id:"first-master",level:2},{value:"Install k3s",id:"install-k3s",level:3},{value:"Add longhorn (optional)",id:"add-longhorn-optional",level:3},{value:"Get the token (Optional)",id:"get-the-token-optional",level:3},{value:"Additional masters (optional)",id:"additional-masters-optional",level:2},{value:"Add worker nodes (optional)",id:"add-worker-nodes-optional",level:2},{value:"Get tools",id:"get-tools",level:2},{value:"Check the cluster",id:"check-the-cluster",level:2},{value:"Done",id:"done",level:2},{value:"Uninstall K3S",id:"uninstall-k3s",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.a)(),...e.components},{Details:s}=n;return s||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.h2,{id:"install-and-set-up",children:"Install and set up"}),"\n",(0,l.jsx)(n.h2,{id:"install-a-new-linux-server-with-docker",children:"Install a new Linux server with Docker"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:'Create a new remote VPS ("virtual private server").'}),"\n",(0,l.jsxs)(n.li,{children:['Deploy the latest Ubuntu LTS ("long term support") version. At the time of this writing it\'s ',(0,l.jsx)(n.code,{children:"Ubuntu 22.04"}),"."]}),"\n",(0,l.jsx)(n.li,{children:"Connect to it via SSH, e.g.:"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"ssh root@172.173.174.175\n"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["Define a server name using a subdomain of a domain you own, for example ",(0,l.jsx)(n.code,{children:"dog.yourdomain.com"}),"."]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Make sure the subdomain DNS records point to your VPS's IP address. Either all the desired subdomains, or use a wildcard. An A record from *.dog.example.com to the VPS IP would work."}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Create a temporary environment variable with the name of the host to be used later, we will also set the email to be used with letsencrypt (using a fake/testing email here might cause it to fail) as well as the version of this guide."}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Set up your domain"}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"export DOMAIN=dog.example.com\n"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Set up your email"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"export EMAIL=name@example.com\n"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Set up the server ",(0,l.jsx)(n.code,{children:"hostname"})," if it is not provided. It is recommended that each node has a unique hostname."]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"export USE_HOSTNAME=my-new-hostname\n"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"echo $USE_HOSTNAME > /etc/hostname\nhostname -F /etc/hostname\n"})}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Note"}),": If you are not a ",(0,l.jsx)(n.code,{children:"root"})," user, you might need to add ",(0,l.jsx)(n.code,{children:"sudo"})," to these commands. The shell will tell you when you don't have enough permissions. Note that ",(0,l.jsx)(n.code,{children:"sudo"})," does not preserve environment variables by default, but this can be enabled via the ",(0,l.jsx)(n.code,{children:"-E"})," flag."]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Install the latest updates, open-iscsi/nfs-common for longhorn and wireguard for security:"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:'--8<-- "./scripts/install_update_open_scsi_wireguard.txt"\n'})}),"\n",(0,l.jsx)(n.p,{children:"In K3S you have one or more master nodes and one or more worker nodes, but the manager nodes can also run workloads. For a high availability set up, it is often recommended to use 3 master nodes, but a single node will be fine for testing."}),"\n",(0,l.jsx)(n.p,{children:"The first step is to configure one (or more) manager nodes."}),"\n",(0,l.jsx)(n.h2,{id:"get-manifests--repo",children:"Get manifests / repo"}),"\n",(0,l.jsx)(n.p,{children:"** Note: ** You can just copy paste these manifests as you please, but to follow along with this guide, it is convenient to have them on disk."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:'--8<-- "./scripts/git_clone_k3s.rocks.txt"\n'})}),"\n",(0,l.jsx)(n.p,{children:"After cloning the repository, change into the manifest directory:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"cd k3s.rocks/manifests\n"})}),"\n",(0,l.jsx)(n.h3,{id:"apply-vs-cat-vs-curl",children:"apply vs cat vs curl"}),"\n",(0,l.jsx)(n.p,{children:"If you prefer not to download them, you can also curl and pipe them directly into kubectl apply -f. Just replace the cat command, with a curl command with the correct url, like this:"}),"\n",(0,l.jsx)(n.h4,{id:"apply",children:"apply"}),"\n",(0,l.jsx)(n.p,{children:"This is the most common version and works fine as long as you dont need to substitute any environment variables."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"kubectl apply -f traefik-config.yaml\n"})}),"\n",(0,l.jsx)(n.h4,{id:"cat--envsubst",children:"cat / envsubst"}),"\n",(0,l.jsx)(n.p,{children:"If you need to replace environment variables inside the yaml, you can do it like this:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"export DOMAIN=test.mydomain.com\ncat traefik-config.yaml | envsubst | kubectl apply -f -\n"})}),"\n",(0,l.jsx)(n.h4,{id:"curl",children:"curl"}),"\n",(0,l.jsx)(n.p,{children:"You can also curl and pipe directly into kubectl if you prefer"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"curl https://raw.githubusercontent.com/askblaker/k3s.rocks/main/manifests/traefik-config.yaml | envsubst | kubectl apply -f -\n"})}),"\n",(0,l.jsx)(n.h2,{id:"first-master",children:"First master"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Note:"})," Remember to have your environment variables set!"]}),"\n",(0,l.jsxs)(n.p,{children:["Not that we also alter the default deployment of the traefik ingress controller, see ",(0,l.jsx)(n.a,{href:"https://github.com/traefik/traefik-helm-chart/blob/v9.18.3/traefik/values.yaml",children:"helm chart values"})," for all the other options. Even K3S internally uses a helmchartconfig, changes can be applied with vanilla kubectl as we do here."]}),"\n",(0,l.jsx)(n.h3,{id:"install-k3s",children:"Install k3s"}),"\n",(0,l.jsx)(n.p,{children:"There are many different configurations that is suitable for different situations. Below are two of them, one straight forward, and one more advanced. If you are just trying this out, I recommend the first straight forward one."}),"\n",(0,l.jsx)(n.p,{children:"Regular internet facing install:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:'--8<-- "./scripts/install_k3s_regular.txt"\n'})}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsxs)(n.p,{children:[(0,l.jsx)("summary",{children:"Internal network install"}),"\n(Replace all values with the ones that apply for you)"]}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"export INTERNAL_INTERFACE=eth0\n"})}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"export NODE_EXTERNAL_IP=55.55.55.55\n"})}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"export NODE_INTERNAL_IP=192.168.0.1\n"})}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION=v1.28.3+k3s2 sh -s server \\\n--cluster-init \\\n--flannel-backend=wireguard-native \\\n--node-external-ip=${NODE_EXTERNAL_IP}  \\\n--node-ip=${NODE_INTERNAL_IP} \\\n--advertise-address=${NODE_INTERNAL_IP} \\\n--flannel-iface=${INTERNAL_INTERFACE} && \\\nexport KUBECONFIG=/etc/rancher/k3s/k3s.yaml && \\\ncat traefik-config.yaml | envsubst | kubectl apply -f -\n"})})]}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"traefik-config.yaml"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:'--8<-- "./manifests/traefik-config.yaml"\n'})})]}),"\n",(0,l.jsxs)(n.p,{children:["** Note ** :\nThe traefik-config.yaml file could also be copied to ",(0,l.jsx)(n.code,{children:"/var/lib/rancher/k3s/server/manifests/traefik-config.yaml"})," on one of the master nodes. K3S will run these files automatically. But this is optional, and not much help if you are using kubectl from outside the cluster."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"cp traefik-config.yaml /var/lib/rancher/k3s/server/manifests/traefik-config.yaml\n"})}),"\n",(0,l.jsx)(n.h3,{id:"add-longhorn-optional",children:"Add longhorn (optional)"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"kubectl apply -f https://raw.githubusercontent.com/longhorn/longhorn/v1.4.0/deploy/longhorn.yaml\n"})}),"\n",(0,l.jsx)(n.h3,{id:"get-the-token-optional",children:"Get the token (Optional)"}),"\n",(0,l.jsx)(n.p,{children:"This token is only needed if you would like to join more masters and workers to the cluster. (There are more secure ways to do this, but its fine for testing)"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"cat /var/lib/rancher/k3s/server/node-token\n"})}),"\n",(0,l.jsx)(n.h2,{id:"additional-masters-optional",children:"Additional masters (optional)"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Set the environment variables"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"export K3S_TOKEN=<Token from master>\n"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"export MASTER_IP=<master node IP>\n"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Run the installer"}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"Regular internet facing install:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:'curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION=v1.28.3+k3s2 K3S_TOKEN="${K3S_TOKEN}" sh -s server \\\n--flannel-backend=wireguard-native \\\n--server https://${MASTER_IP}:6443\n'})}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsxs)(n.p,{children:[(0,l.jsx)("summary",{children:"Internal network install"}),"\n(Replace all values with the ones that apply for you)"]}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"export INTERNAL_INTERFACE=eth0\n"})}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"export NODE_EXTERNAL_IP=55.55.55.55\n"})}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"export NODE_INTERNAL_IP=192.168.0.1\n"})}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:'curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION=v1.28.3+k3s2 K3S_TOKEN="${K3S_TOKEN}" sh -s server \\\n--flannel-backend=wireguard-native \\\n--server https://${MASTER_IP}:6443 \\\n--node-external-ip=${NODE_EXTERNAL_IP}  \\\n--node-ip=${NODE_INTERNAL_IP} \\\n--advertise-address=${NODE_INTERNAL_IP} \\\n--flannel-iface=${INTERNAL_INTERFACE}\n'})})]}),"\n",(0,l.jsx)(n.h2,{id:"add-worker-nodes-optional",children:"Add worker nodes (optional)"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Set the environment variables"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"export K3S_TOKEN=<Token from master>\n"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"export MASTER_IP=<master node IP>\n"})}),"\n",(0,l.jsx)(n.p,{children:"Regular internet facing install:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:'curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION=v1.28.3+k3s2 K3S_TOKEN="${K3S_TOKEN}" K3S_URL=https://${MASTER_IP}:6443 sh -\n'})}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Internal network install"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"export NODE_INTERNAL_IP=192.168.0.1\n"})}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"export INTERNAL_INTERFACE=eth0\n"})}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:'curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION=v1.26.1+k3s1 K3S_TOKEN="${K3S_TOKEN}" \\\nK3S_URL=https://${MASTER_IP}:6443 INSTALL_K3S_EXEC="--node-ip ${NODE_INTERNAL_IP} --flannel-iface ${INTERNAL_INTERFACE}" \\\nsh -\n'})})]}),"\n",(0,l.jsx)(n.h2,{id:"get-tools",children:"Get tools"}),"\n",(0,l.jsx)(n.p,{children:"These tools can be on any machine, including your local. But it needs to at least have kubectl installed. If you have activated kubernetes in your docker desktop installation, you already have it."}),"\n",(0,l.jsx)(n.p,{children:"Required"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"https://kubernetes.io/docs/tasks/tools/install-kubectl-linux/",children:"kubectl"})}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"Optional"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"https://kubernetes.io/docs/reference/kubectl/cheatsheet/#kubectl-autocomplete",children:"Kubectl autocomplete"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"https://helm.sh/docs/",children:"Helm"})}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"check-the-cluster",children:"Check the cluster"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"kubectl get nodes\n"})}),"\n",(0,l.jsx)(n.p,{children:"Should output something like this (if you start with one master and add another master):"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"NAME   STATUS   ROLES                       AGE     VERSION\nm1     Ready    control-plane,etcd,master   3m26s   v1.26.1+k3s1\nm2     Ready    control-plane,etcd,master   17s     v1.26.1+k3s1\n"})}),"\n",(0,l.jsx)(n.h2,{id:"done",children:"Done"}),"\n",(0,l.jsx)(n.p,{children:"That's it. You have a single or multi node kubernetes cluster set up."}),"\n",(0,l.jsx)(n.p,{children:"Continue with the guide to see how to set up some sample applications, basic auth, HTTPS etc."}),"\n",(0,l.jsx)(n.h2,{id:"uninstall-k3s",children:"Uninstall K3S"}),"\n",(0,l.jsxs)(n.p,{children:["If you need to uninstall K3S, you can use these commands from the ",(0,l.jsx)(n.a,{href:"https://rancher.com/docs/k3s/latest/en/installation/uninstall/",children:"k3s docs"}),". After that you can repeat the installation process. Sometimes when experimenting, it can also be good to just delete or recreate the VM/VPS you are working on and start from the beginning."]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Server"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"/usr/local/bin/k3s-uninstall.sh\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Agent"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"/usr/local/bin/k3s-agent-uninstall.sh\n"})})]})}function h(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}},1151:(e,n,s)=>{s.d(n,{Z:()=>i,a:()=>r});var l=s(7294);const t={},a=l.createContext(t);function r(e){const n=l.useContext(a);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),l.createElement(a.Provider,{value:n},e.children)}}}]);